from aiogram import types
from Config import dp, bot, UserState, create_connection
from Keyboards import information_kb

async def information(chat_id):
    await bot.send_message(chat_id, text="–ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å —á–∞—Ç GPT", reply_markup=information_kb)

@dp.message_handler(lambda message: message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Äüí°", state=UserState.information)
async def example(message: types.Message):
    await bot.send_message(message.chat.id, "–ú–µ–Ω—è –∑–æ–≤—É—Ç –î–∞—Ä–∏—è, –º–Ω–µ 25 –ª–µ—Ç, —è —É–≤–ª–µ–∫–∞—é—Å—å –∏–≥—Ä–æ–π –Ω–∞ —Ñ–æ—Ä—Ç–µ–ø–∏–∞–Ω–æ, –∞ —Ç–∞–∫–∂–µ –ª—é–±–ª—é —Ä–∏—Å–æ–≤–∞—Ç—å. –Ø —É–∂–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ–¥–µ–ª—å —Å–ª–µ–∂—É –∑–∞ –æ–¥–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–µ–π –∏ –æ–Ω–∏ –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –º–µ–Ω—è –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ, –¥–∞—Ç—É –µ—â–µ –Ω–µ –Ω–∞–∑–Ω–∞—á–∞–ª–∏, –Ω–æ —è –æ—á–µ–Ω—å –∂–¥—É –∏ –≤–æ–ª–Ω—É—é—Å—å. –í–æ–∑–º–æ–∂–Ω–æ –º–Ω–µ —É—Å—Ç—Ä–æ—è—Ç –∫–∞–∫–æ–π —Ç–æ —Ç–µ—Å—Ç, –ø–æ—ç—Ç–æ–º—É —è –±—ã —Ö–æ—Ç–µ–ª–∞ –ø–æ–¥—Ç—è–Ω—É—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –≤ —Å—Ñ–µ—Ä–µ –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–æ–≥–æ —É—á–µ—Ç–∞")


@dp.message_handler(lambda message: message.text == "–î–µ–π—Å—Ç–≤—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚úÖ", state=UserState.information)
async def current_information(message: types.Message):
    user_id = message.from_user.id
    conn = await create_connection()
    information = await conn.fetchval('SELECT information FROM user_settings WHERE user_id = $1', user_id)
    await conn.close()
    if information:
        await bot.send_message(message.chat.id, f"–î–µ–π—Å—Ç–≤—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {information}")
    else:
        await bot.send_message(message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –∑–∞–¥–∞–Ω–∞")


@dp.message_handler(lambda message: message.text == "–°–±—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é‚ùå", state=UserState.information)
async def reset_information(message: types.Message):
    user_id = message.from_user.id
    conn = await create_connection()
    await conn.execute("UPDATE user_settings SET information = NULL WHERE user_id = $1", user_id)
    await conn.close()
    await bot.send_message(message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–±—Ä–æ—à–µ–Ω–∞, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–∏–ª—É –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥")


@dp.message_handler(state=UserState.information)
async def set_information(message: types.Message):
    user_id = message.from_user.id
    information = message.text
    conn = await create_connection()
    await conn.execute('''
        INSERT INTO user_settings (user_id, information) 
        VALUES ($1, $2) 
        ON CONFLICT (user_id) DO UPDATE SET information = $2
    ''', user_id, information)
    await conn.close()
    await bot.send_message(message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞, —á—Ç–æ–±—ã –µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥")
