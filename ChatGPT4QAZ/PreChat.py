from aiogram import types
from Config import dp, bot, UserState
from Keyboards import prechat_kb
from ChatDB import pre_check_free, pre_check_vip

async def prechat(chat_id):
    await bot.send_message(chat_id, text="–ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å- –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —á–∞—Ç\n–ï—Å–ª–∏ —É –í–∞—Å –∞–∫—Ç–∏–≤–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞- –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ VIP —á–∞—Çüíé", reply_markup=prechat_kb)

#–ò–∑ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
@dp.message_handler(lambda message: message.text == "–ù–∞–∑–∞–¥‚è™", state=UserState.chatfree)
async def chatfree_finish(message: types.Message):
    await bot.send_message(message.chat.id, "–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
    await UserState.prechat.set()
    await prechat(message.chat.id)

#–ò–∑ –ø–ª–∞—Ç–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
@dp.message_handler(lambda message: message.text == "–ù–∞–∑–∞–¥‚è™", state=UserState.chatvip)
async def chatvip_finish(message: types.Message):
    await bot.send_message(message.chat.id, "–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
    await UserState.prechat.set()
    await prechat(message.chat.id)

from ChatFree import chatfree
from ChatVIP import chatvip

@dp.message_handler(lambda message: message.text == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —á–∞—ÇüéÅ", state=UserState.prechat)
async def chatfree_start(message: types.Message):
    await bot.send_message(message.chat.id, "–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
    if await pre_check_free(message.from_user.id, message):
        await UserState.chatfree.set()
        await chatfree(message.chat.id)
    else:
        pass


@dp.message_handler(lambda message: message.text == "VIP —á–∞—Çüíé", state=UserState.prechat)
async def chatvip_start(message: types.Message):
    await bot.send_message(message.chat.id, "–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
    if await pre_check_vip(message.from_user.id, message):
        await bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VIP —á–∞—Çüíé")
        await bot.send_sticker(chat_id=message.chat.id, sticker="CAACAgIAAxkBAAIQAWUlEp7AtYdnYjZD5V5FtrfMb7mZAAI_EQACQQipSKePgWazX2l2MAQ")
        await UserState.chatvip.set()
        await chatvip(message.chat.id)
    else:
        pass


@dp.message_handler(lambda message: message.text == "–í —á–µ–º –æ—Ç–ª–∏—á–∏–µüí°", state=UserState.prechat)
async def customization_start(message: types.Message):
    await bot.send_message(message.chat.id, "–î–ª—è –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –≤—ã–¥–µ–ª–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –æ–±—â–µ–Ω–∏—è —Å —á–∞—Ç–æ–º GPT, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏ –ø–ª–∞—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π 2 —Ä–∞–∑–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞\n"
                                            "–¢–∞–∫–∂–µ –≤ VIP –ø–æ—Ç–æ–∫–µ –∑–∞–ø—Ä–æ—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ (–æ–¥–Ω–∞–∫–æ –í—ã –≤—Ä—è–¥ –ª–∏ –∑–∞–º–µ—Ç–∏—Ç–µ —ç—Ç—É —Ä–∞–∑–Ω–∏—Ü—É, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Ç–æ–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ)")